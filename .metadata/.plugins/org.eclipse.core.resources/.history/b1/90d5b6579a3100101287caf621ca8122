/*
 * 3_SPI_TX_testing.c
 *
 *  Created on: May 15, 2025
 *      Author: jesti
 */
# include "stm32f407xx.h"
# include "stm32f407xx_gpio_driver.h"
# include "stm32f407xx_spi_driver.h"
# include "<string.h>";
/*
 * PB14: SPI2_MISO
 * PB15: SPI2_MOSI
 * PB13: SPI2_SCLK
 * PB12: SPI2_NSS
 * ALT function mode = 5
 */
void SPI_GPIOInit(void){
	GPIO_Handle_t SPIPins;
	SPIPins.pGPIOx = GPIOB;
	SPIPins.GPIO_PinConfig.GPIO_PinMode= GPIO_MODE_ALTFN;
	SPIPins.GPIO_PinConfig.GPIO_PinAltFunMode =5;
	SPIPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OUT_TYPE_PP;
	SPIPins.GPIO_PinConfig.GPIO_PinPull_up_down_control = GPIO_NO_PUPD;
	SPIPins.GPIO_PinConfig.GPIO_PinSpeed= GPIO_SPEED_FAST;

	//NSS
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
	GPIO_Init(&SPIPin);

	//SCLK
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_13;
	GPIO_Init(&SPIPin);

	//MISO
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_14;
	GPIO_Init(&SPIPin);

	//MOSI
	SPIPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_15;
	GPIO_Init(&SPIPin);
}
void SPI_Init(void){
	SPI_Handle_t SPI2Handle;
	SPI2Handle.pSPIx = SPI2;
	SPI2Handle.SPIConfig.SPI_BusConfig= SPI_BUS_CONFIG_FULL_DUP;
	SPI2Handle.SPIConfig.SPI_DeviceMode = SPI_DEVICE_MODE_MASTER;
	SPI2Handle.SPIConfig.SPI_SclkSpeed = SPI_SCLK_SPEED_DIV2; //8MHz clock
	SPI2Handle.SPIConfig.SPI_DFF = SPI_DFF_8BITS;
	SPI2Handle.SPIConfig.SPI_CPOL = SPI_CPOL_LOW;
	SPI2Handle.SPIConfig.SPI_CPHA = SPI_CPHA_LOW;
	SPI2Handle.SPIConfig.SPI_SSM = SPI_SSM_EN; // enables software slave management, grounds pin internally
	SPI_Init(&SPI2Handle);
}
int main(void){
	char transmit_data[] = "Hello world";
	//initialize GPIO pins to behave as SPI2 pins
	SPI_GPIOInit();
	// initialize SPI pin config
	SPI_Init();

	SPI_SendData(SPI2, transmit_data, strlen(transmit_data));
	return 0;
}
