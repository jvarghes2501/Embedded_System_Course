/*
 * spi_driver.c
 *
 *  Created on: May 10, 2025
 *      Author: jesti
 */
# include "stm32f407xx_spi_driver.h"


void SPI_ClockControl(SPI_RegDef_t *pSPIx, uint8_t Enable_or_disable){
	if (Enable_or_disable==ENABLE){
			if (pSPIx == SPI1){
				SPI1_CLOCK_ENABLE();
			}else if (pSPIx == SPI2){
				SPI2_CLOCK_ENABLE();
			}else if (pSPIx == SPI3){
				SPI3_CLOCK_ENABLE();
			}
		}else{
			if (pSPIx == SPI1){
				SPI1_CLOCK_DISABLE();
			}else if (pSPIx == SPI2){
				SPI2_CLOCK_DISABLE();
			}else if (pSPIx == SPI3){
				SPI3_CLOCK_DISABLE();
			}
		}

}

void SPI_Init(SPI_Handle_t *pSPIHandle){
	uint32_t temp_reg = 0;
	//configure the device mode
	temp_reg |= pSPIHandle->SPIConfig.SPI_DeviceMode << 2;

	// configure the bus config
	if (pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_FULL_DUP){
		// bidi mode should be cleared
		temp_reg &= ~(1<<15);
	}else if (pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_HALF_DUP){
		//bidi mode should be set
		temp_reg |= (1<<15);
	}else if (pSPIHandle->SPIConfig.SPI_BusConfig == SPI_BUS_CONFIG_SIMPLEX_RXONLY)
	{
		// bidi mode should be cleared
		temp_reg &= ~(1<<15);
		//RX only bit must be set
		temp_reg |= (1<<10);

	}

	// configure the spi serial clock speed
	temp_reg |= pSPIHandle->SPIConfig.SPI_SclkSpeed << 3;
	//configure the DFF
	temp_reg |= pSPIHandle->SPIConfig.SPI_DFF << 11;
	//configure the CPOL
	temp_reg |= pSPIHandle->SPIConfig.SPI_CPOL << 1;
	// configure the CPHA
	temp_reg |= pSPIHandle->SPIConfig.SPI_CPHA << 0;

	pSPIHandle->pSPIx->CR1 = temp_reg;



}
